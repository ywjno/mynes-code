
// This file has been generated by the GUI designer. Do not modify.
namespace MyNesGTK
{
	public partial class Dialog_About
	{
		private global::Gtk.VBox vbox2;
		
		private global::Gtk.Label label_name;
		
		private global::Gtk.Label label_gtkVersion;
		
		private global::Gtk.Label label_coreVersion;
		
		private global::Gtk.Notebook notebook1;
		
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		
		private global::Gtk.TextView textview1;
		
		private global::Gtk.Label label4;
		
		private global::Gtk.ScrolledWindow GtkScrolledWindow2;
		
		private global::Gtk.TextView textview3;
		
		private global::Gtk.Label label5;
		
		private global::Gtk.Label label_sdlVersion;
		
		private global::Gtk.Button buttonOk;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MyNesGTK.Dialog_About
			this.Name = "MyNesGTK.Dialog_About";
			this.Title = global::Mono.Unix.Catalog.GetString ("About My Nes GTK");
			this.Icon = global::Gdk.Pixbuf.LoadFromResource ("MyNesGTK.resources.MyNes.ico");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Internal child MyNesGTK.Dialog_About.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.label_name = new global::Gtk.Label ();
			this.label_name.Name = "label_name";
			this.label_name.LabelProp = global::Mono.Unix.Catalog.GetString ("My Nes GTK");
			this.vbox2.Add (this.label_name);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.label_name]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.label_gtkVersion = new global::Gtk.Label ();
			this.label_gtkVersion.Name = "label_gtkVersion";
			this.label_gtkVersion.LabelProp = global::Mono.Unix.Catalog.GetString ("Version 3.0");
			this.vbox2.Add (this.label_gtkVersion);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.label_gtkVersion]));
			w3.Position = 1;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.label_coreVersion = new global::Gtk.Label ();
			this.label_coreVersion.Name = "label_coreVersion";
			this.label_coreVersion.LabelProp = global::Mono.Unix.Catalog.GetString ("label2");
			this.vbox2.Add (this.label_coreVersion);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.label_coreVersion]));
			w4.Position = 2;
			w4.Expand = false;
			w4.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.notebook1 = new global::Gtk.Notebook ();
			this.notebook1.CanFocus = true;
			this.notebook1.Name = "notebook1";
			this.notebook1.CurrentPage = 0;
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.textview1 = new global::Gtk.TextView ();
			this.textview1.Buffer.Text = "MY NES GTK Edition\n---------------------\n  Is a multi-platform edition for My Nes" +
			" Emulator;\nA Nintendo Entertainment System / Family Computer (Nes/Famicom) Emula" +
			"tor written in C#.\n\nCopyright © Ala Ibrahim Hadid 2009 - 2015\n\nWritten by Ala Ib" +
			"rahim Hadid\nEmail: ahdsoftwares@hotmail.com\n\nThis program is free software: you " +
			"can redistribute it and/or modify it under the terms\nof the GNU General Public L" +
			"icense as published by the Free Software Foundation, either\nversion 3 of the Lic" +
			"ense, or (at your option) any later version.\n\nThis program is distributed in the" +
			" hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied" +
			" warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. \nSee the GNU G" +
			"eneral Public License for more details.\n\nYou should have received a copy of the " +
			"GNU General Public License along with this program. \nIf not, see <http://www.gnu" +
			".org/licenses/>.\n\nImportant!!\n------------\nNES is either a trademark or register" +
			"ed trademark of Nintendo of America Inc.\nFamicom is either a trademark or regist" +
			"ered trademark of Nintendo Co., LTD.\nAll other trademarks are property of their " +
			"respective owners.\nMy Nes is not affiliated with or endorsed by any of the compa" +
			"nies mentioned.\n\nSome icons from Silk icon set 1.3\n-----------------------------" +
			"------\nMark James\nhttp://www.famfamfam.com/lab/icons/silk/\n\nThis work is license" +
			"d under a\nCreative Commons Attribution 2.5 License.\n[ http://creativecommons.org" +
			"/licenses/by/2.5/ ]\n\nSDLDotNet\n------------\n.NET Bindings for SDL\nCopyright ©200" +
			"3-2007 David Hudson.  All rights reserved.\nReleased under the GNU LESSER GENERAL" +
			" PUBLIC LICENSE Version 2.1, February 1999\nWebsite: http://cs-sdl.sourceforge.ne" +
			"t\n\nZLIP\n-----\nCopyright (c) 2006-2007, ComponentAce\nhttp://www.componentace.com\n" +
			"All rights reserved.\n\nRedistribution and use in source and binary forms, with or" +
			" without modification, are permitted provided that the following conditions are " +
			"met:\n\nRedistributions of source code must retain the above copyright notice, thi" +
			"s list of conditions and the following disclaimer.\nRedistributions in binary for" +
			"m must reproduce the above copyright notice, this list of conditions and the fol" +
			"lowing disclaimer in the documentation and/or other materials provided with the " +
			"distribution.\nNeither the name of ComponentAce nor the names of its contributors" +
			" may be used to endorse or promote products derived from this software without s" +
			"pecific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOL" +
			"DERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, " +
			"BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A " +
			"PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONT" +
			"RIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR " +
			"CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE " +
			"GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWE" +
			"VER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY" +
			", OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE " +
			"OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nNesCartDB\n" +
			"----------------\nBy BootGod, released at : Sat Sep 10 14:40:41 2011\nDownloaded f" +
			"rom:http://bootgod.dyndns.org:7777/home.php\n";
			this.textview1.CanFocus = true;
			this.textview1.Name = "textview1";
			this.textview1.Editable = false;
			this.GtkScrolledWindow.Add (this.textview1);
			this.notebook1.Add (this.GtkScrolledWindow);
			// Notebook tab
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("License");
			this.notebook1.SetTabLabel (this.GtkScrolledWindow, this.label4);
			this.label4.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.GtkScrolledWindow2 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow2.Name = "GtkScrolledWindow2";
			this.GtkScrolledWindow2.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow2.Gtk.Container+ContainerChild
			this.textview3 = new global::Gtk.TextView ();
			this.textview3.Buffer.Text = "Website: http://sourceforge.net/projects/mynes/\n\nArticle: http://www.codeproject." +
			"com/KB/game/MyNes_NitendoEmulator.aspx\n\nFacebook: http://www.facebook.com/pages/" +
			"My-Nes/427707727244076";
			this.textview3.CanFocus = true;
			this.textview3.Name = "textview3";
			this.textview3.Editable = false;
			this.GtkScrolledWindow2.Add (this.textview3);
			this.notebook1.Add (this.GtkScrolledWindow2);
			global::Gtk.Notebook.NotebookChild w8 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.GtkScrolledWindow2]));
			w8.Position = 1;
			// Notebook tab
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("Links");
			this.notebook1.SetTabLabel (this.GtkScrolledWindow2, this.label5);
			this.label5.ShowAll ();
			this.vbox2.Add (this.notebook1);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.notebook1]));
			w9.PackType = ((global::Gtk.PackType)(1));
			w9.Position = 3;
			// Container child vbox2.Gtk.Box+BoxChild
			this.label_sdlVersion = new global::Gtk.Label ();
			this.label_sdlVersion.Name = "label_sdlVersion";
			this.label_sdlVersion.LabelProp = global::Mono.Unix.Catalog.GetString ("label3");
			this.vbox2.Add (this.label_sdlVersion);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.label_sdlVersion]));
			w10.PackType = ((global::Gtk.PackType)(1));
			w10.Position = 4;
			w10.Expand = false;
			w10.Fill = false;
			w1.Add (this.vbox2);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(w1 [this.vbox2]));
			w11.Position = 0;
			// Internal child MyNesGTK.Dialog_About.ActionArea
			global::Gtk.HButtonBox w12 = this.ActionArea;
			w12.Name = "dialog1_ActionArea";
			w12.Spacing = 10;
			w12.BorderWidth = ((uint)(5));
			w12.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button ();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			this.AddActionWidget (this.buttonOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w13 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w12 [this.buttonOk]));
			w13.Expand = false;
			w13.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 642;
			this.DefaultHeight = 451;
			this.Show ();
		}
	}
}
