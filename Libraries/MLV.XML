<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MLV</name>
    </assembly>
    <members>
        <member name="T:MLV.MLVItemsEditor">
            <summary>
            Items collection editor
            </summary>
        </member>
        <member name="M:MLV.MLVItemsEditor.#ctor(System.Type)">
            <summary>
            Items collection editor
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:MLV.MLVItemsEditor.GetDisplayText(System.Object)">
            <summary>
            Get Display Text
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MLV.MLVItemsEditor.SetItems(System.Object,System.Object[])">
            <summary>
            Set Items
            </summary>
            <param name="editValue"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MLV.MLVItemsEditor.CreateInstance(System.Type)">
            <summary>
            Create Instance
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:MLV.ManagedListView">
            <summary>
            Advanced ListView control.
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.#ctor">
            <summary>
            Advanced ListView control.
            </summary>
        </member>
        <member name="F:MLV.ManagedListView.autoSetWheelScrollSpeed">
            <summary>
            Indicates if should use the auto wheel speed set
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.GetItemAtCursorPoint">
            <summary>
            Retrieve item at current cursor point
            </summary>
            <returns>The found item</returns>
        </member>
        <member name="M:MLV.ManagedListView.GetItemAtPoint(System.Drawing.Point)">
            <summary>
            Retrieve item at point
            </summary>
            <param name="point">The point</param>
            <returns>The found item</returns>
        </member>
        <member name="M:MLV.ManagedListView.GetItemIndexAtCursorPoint">
            <summary>
            Retrieve item index at current cursor point
            </summary>
            <returns>The found item index</returns>
        </member>
        <member name="M:MLV.ManagedListView.GetItemIndexAtPoint(System.Drawing.Point)">
            <summary>
            Retrieve item index at point
            </summary>
            <param name="point">The point</param>
            <returns>The found item index</returns>
        </member>
        <member name="M:MLV.ManagedListView.ScrollToItem(System.Int32)">
            <summary>
            Scroll view port into item
            </summary>
            <param name="itemIndex">The item index</param>
        </member>
        <member name="M:MLV.ManagedListView.ScrollToItem(MLV.ManagedListViewItem)">
            <summary>
            Scroll view port into item
            </summary>
            <param name="item">The item to scroll into</param>
        </member>
        <member name="M:MLV.ManagedListView.OnFontChanged(System.EventArgs)">
            <summary>
            Rises the font changed event
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListView.UpdateScrollBars">
            <summary>
            Update the scroll bars and make the right calculations. Sometime, the control forget to calculate these values and results 
            hidden items.
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.OnItemAdded">
            <summary>
            Raises the ItemAdded event
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.OnItemRemoved">
            <summary>
            Raises the ItemRemoved event
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.OnItemsCollectionCleared">
            <summary>
            Raises the ItemsCollectionCleared event
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.OnItemsCollectionSorted">
            <summary>
            Raises the ItemsCollectionSorted event
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.OnColumnAdded">
            <summary>
            Raises the ColumnAdded event
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.OnColumnRemoved">
            <summary>
            Raises the ColumnRemoved event
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.OnColumnsCollectionCleared">
            <summary>
            Raises the ColumnsCollectionCleared event
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.OnColumnsCollectionSorted">
            <summary>
            Raises the ColumnsCollectionSorted event
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.FixWheelScrollSpeed">
            <summary>
            Auto set the wheel scroll speed value depending on items collection. AutoSetWheelScrollSpeed property must be set to true.
            </summary>
        </member>
        <member name="F:MLV.ManagedListView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MLV.ManagedListView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MLV.ManagedListView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ViewMode">
            <summary>
            Get or set the viewmode.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.Columns">
            <summary>
            Get or set the column collection.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.Items">
            <summary>
            Get or set the items collection.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.AllowItemsDragAndDrop">
            <summary>
            Get or set if selected items can be draged and droped
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.AllowColumnsReorder">
            <summary>
            Allow columns reorder ? after a column reordered, the index of that column within the columns collection get changed
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ChangeColumnSortModeWhenClick">
            <summary>
            If enabled, the sort mode of a column get changed when the user clicks that column
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ThunmbnailsHeight">
            <summary>
            The thunmbnail height. Work only for Thumbnails view mode.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ThunmbnailsWidth">
            <summary>
            The thunmbnail width. Work only for thumbnails view mode.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.WheelScrollSpeed">
            <summary>
            The speed of the scroll when using mouse wheel. Default value is 20.
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.AutoSetWheelScrollSpeed">
            <summary>
            Auto set the WheelScrollSpeed property depending on items collection change
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.DrawHighlight">
            <summary>
            If enabled, the item get highlighted when the mouse over it
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ImagesList">
            <summary>
            The images list that will be used for draw
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.SelectedItems">
            <summary>
            Get the selected items collection
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.AllowDrop">
            <summary>
            Get or set if this control can accept dropped data
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.Font">
            <summary>
            Get or set the font of this control
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.BackgroundImage">
            <summary>
            Get or set the background image
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.BackColor">
            <summary>
            Get or set the background color of the control
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ItemHighlightColor">
            <summary>
            The item highlight color
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ItemSpecialColor">
            <summary>
            The special item color
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ItemMouseOverColor">
            <summary>
            The color when the mouse get over item
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ColumnColor">
            <summary>
            The column color
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ColumnHighlightColor">
            <summary>
            The column highlight color
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.ColumnClickColor">
            <summary>
            The column click color
            </summary>
        </member>
        <member name="P:MLV.ManagedListView.StretchThumbnailsToFit">
            <summary>
            If true, the item image will be stretched using ratio stretch to fit thumbnails size. Thumbnails mode only.
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.DrawColumn">
            <summary>
            Raised when the control need to draw a column
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.DrawItem">
            <summary>
            Raised when the control need to draw an item. The item information will be sent along with this event args. Please note that this event Raised only with Thumbnails View Mode.
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.DrawSubItem">
            <summary>
            Raised when the control need to draw a sub item
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.MouseOverSubItem">
            <summary>
            Raised when the mouse is over a sub item
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.SelectedIndexChanged">
            <summary>
            Raised when the item selection changed
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ColumnClicked">
            <summary>
            Raised when the user clicks a column
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.EnterPressed">
            <summary>
            Raised when the user pressed the return key
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ItemDoubleClick">
            <summary>
            Raised when the user double click on item
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.SwitchToColumnsContextMenu">
            <summary>
            Raised when the control needs to shwitch to the columns context menu
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.SwitchToNormalContextMenu">
            <summary>
            Raised when the control needs to shwitch to the normal context menu
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.AfterColumnResize">
            <summary>
            Raised when the user finished resizing a column
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ItemsDrag">
            <summary>
            Raised when the user draged item(s)
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ViewModeChanged">
            <summary>
            Raised when the user changed the view mode
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.AfterColumnReorder">
            <summary>
            Raised when the user reorder a column
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ItemAdded">
            <summary>
            Raised when the user adds new item to the collection
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ItemRemoved">
            <summary>
            Raised when the user removes item from the collection
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ItemsCollectionCleared">
            <summary>
            Raised when the items collection get cleared
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ItemsCollectionSorted">
            <summary>
            Raised when the items collection get sorted
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ColumnAdded">
            <summary>
            Raised when the user adds new column to the collection
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ColumnRemoved">
            <summary>
            Raised when the user removes column from the collection
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ColumnsCollectionCleared">
            <summary>
            Raised when the columns collection get cleared
            </summary>
        </member>
        <member name="E:MLV.ManagedListView.ColumnsCollectionSorted">
            <summary>
            Raised when the columns collection get sorted
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemsComparer">
            <summary>
            The items comparer class for comparing Managed ListView items via column id.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemsComparer.#ctor(System.Boolean,System.String)">
            <summary>
            The items comparer class for comparing Managed ListView items via column id.
            </summary>
            <param name="AtoZ">True= A to Z sort, False=Z to A sort</param>
            <param name="subitemId">The column id of the subitem.</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsComparer.Compare(MLV.ManagedListViewItem,MLV.ManagedListViewItem)">
            <summary>
            Compare 2 items depending on subitem
            </summary>
            <param name="x">The first item</param>
            <param name="y">The second item</param>
            <returns>Compare result.</returns>
        </member>
        <member name="T:MLV.ManagedListViewPanel">
            <summary>
            The Advanced ListView panel. This control should be used only on ManagedListView user control.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.#ctor">
            <summary>
            The Advanced ListView panel.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.viewMode">
            <summary>
            The view mode
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.columns">
            <summary>
            The columns collection
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.items">
            <summary>
            The items collection
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ImagesList">
            <summary>
            The images list
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.HscrollOffset">
            <summary>
            The horisontal scroll offset
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.VscrollOffset">
            <summary>
            The vertical scroll offset value
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.AllowItemsDragAndDrop">
            <summary>
            Indecate whether the user can drag and drop items
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.AllowColumnsReorder">
            <summary>
            Indecate whether the user can reorder the columns.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ChangeColumnSortModeWhenClick">
            <summary>
            Indecate whether the sort mode value of a column get changed when the user click that column.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ThumbnailsHeight">
            <summary>
            The thumbnail height value
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ThumbnailsWidth">
            <summary>
            The thumbnails width value
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.itemTextHeight">
            <summary>
            The item text height
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.DrawHighlight">
            <summary>
            Indecate whether to draw item highlight when the mouse over that item.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.itemHeight">
            <summary>
            The item height
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ThumbnailsKeepImageSize">
            <summary>
            If true, the image will not be stretched to thumbnails size if it's larger than image original size.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.buffered_columnsSize">
            <summary>
            The buffered columns size
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.buffered_itemsSize">
            <summary>
            Buffered items total size
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ItemHighlightColor">
            <summary>
            The item highlight color
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ItemSpecialColor">
            <summary>
            The special item color
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ItemMouseOverColor">
            <summary>
            The color when the mouse get over item
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ColumnColor">
            <summary>
            The column color
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ColumnHighlightColor">
            <summary>
            The column highlight color
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewPanel.ColumnClickColor">
            <summary>
            The column click color
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetItemIndexAtCursorPoint">
            <summary>
            Get item index at cursor point
            </summary>
            <returns>The item index if found otherwise -1</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetItemIndexAtPoint(System.Drawing.Point)">
            <summary>
            Get item index at point
            </summary>
            <param name="location">The location within the viewport</param>
            <returns>The item index if found otherwise -1</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.CalculateColumnsSize">
            <summary>
            Calculate all columns width
            </summary>
            <returns>The columns width (all columns)</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.CalculateItemsSize">
            <summary>
            Calculate all items size (height). Works with Details view mode only
            </summary>
            <returns>The height of all items</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetItemHeight">
            <summary>
            Get the height of one item. Works with Details view mode only
            </summary>
            <returns></returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetVisibleItemsHeight">
            <summary>
            Get the visible items total height
            </summary>
            <returns></returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.GetVscrollValueForItem(System.Int32)">
            <summary>
            Get vertical scroll value for item
            </summary>
            <param name="itemIndex">The item index</param>
            <returns>The vertical scroll value</returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.CalculateSizeOfItemsAsThumbnails">
            <summary>
            Calculate all items size (height). Works with Thumbnails view mode only
            </summary>
            <returns></returns>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnKeyDownRaised(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raise the key own event
            </summary>
            <param name="e">The key event arguments</param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnRefreshScrollBars">
            <summary>
            Raise the refresh scroll bars event
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseLeaveRise">
            <summary>
            Raise the mouse leave event
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnColumnsCollectionClear">
            <summary>
            Call this when the columns collection get cleared
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raise the paint event
            </summary>
            <param name="pe"><see cref="T:System.Windows.Forms.PaintEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the background
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raise the mouse down event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raise the mouse up event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raise the mouse move event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raise the mouse click event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raise the mouse wheel event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raise the mouse double click event
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnMouseLeave(System.EventArgs)">
            <summary>
            Raise the mouse leave event
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnEnter(System.EventArgs)">
            <summary>
            On enter
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.OnResize(System.EventArgs)">
            <summary>
            On resize
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:MLV.ManagedListViewPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MLV.ManagedListViewPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewPanel.SelectedItems">
            <summary>
            The selected items collection
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.AdvanceVScrollRequest">
            <summary>
            Raised when the control requests an advance for vertical scroll value
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ReverseVScrollRequest">
            <summary>
            Raised when the control requests a reverse for vertical scroll value
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.AdvanceHScrollRequest">
            <summary>
            Raised when the control requests an advance for horizontal scroll value
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ReverseHScrollRequest">
            <summary>
            Raised when the control requests a reverse for horizontal scroll value
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.RefreshScrollBars">
            <summary>
            Raised when the control requests a refresh for scroll bars
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.SelectedIndexChanged">
            <summary>
            Raised when selected items value changed
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.DrawColumn">
            <summary>
            Raised when the control needs to draw column
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.DrawItem">
            <summary>
            Raised when the control needs to draw item
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.DrawSubItem">
            <summary>
            Raised when the control needs to draw subitem
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.MouseOverSubItem">
            <summary>
            Raised when the mouse cursor over a subiem.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ColumnClicked">
            <summary>
            Raised when a column get clicked
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ItemDoubleClick">
            <summary>
            Raised when an item double click occures
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.EnterPressedOverItem">
            <summary>
            Raised when the user presses enter after selecting one item.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.SwitchToColumnsContextMenu">
            <summary>
            Raised when the control requests to switch into the columns context menu strip
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.SwitchToNormalContextMenu">
            <summary>
            Raised when the control requests to switch into the normal context menu strip
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.AfterColumnResize">
            <summary>
            Raised when a column get resized
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.AfterColumnReorder">
            <summary>
            Raised when a column get reordered
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ItemsDrag">
            <summary>
            Raised when an item get draged
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.ScrollToSelectedItemRequest">
            <summary>
            Raised when the control requests to scroll into given item
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewPanel.RefreshValues">
            <summary>
            Raised when values refresh required.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewPanel.Font">
            <summary>
            Get or set the font
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewPanel.BackgroundImage">
            <summary>
            Get or set the background image
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewColumnClickArgs">
            <summary>
            Arguments for column click events
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnClickArgs.#ctor(System.String)">
            <summary>
            Arguments for column click events
            </summary>
            <param name="id">The target column id</param>
        </member>
        <member name="P:MLV.ManagedListViewColumnClickArgs.ColumnID">
            <summary>
            Get the column id
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewColumnDrawArgs">
            <summary>
            Arguments for column draw events
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnDrawArgs.#ctor(System.String,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Arguments for column draw events
            </summary>
            <param name="id">The target column id</param>
            <param name="gr">The graphics class used to draw the column</param>
            <param name="rectangle">The rectangle area of the column in the draw panel</param>
        </member>
        <member name="P:MLV.ManagedListViewColumnDrawArgs.ColumnID">
            <summary>
            Get the column id
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumnDrawArgs.ColumnRectangle">
            <summary>
            Get the rectangle area of the column in the draw panel
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumnDrawArgs.Graphics">
            <summary>
            Get the graphics class used to draw the column
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemDoubleClickArgs">
            <summary>
            Arguments for item double click events
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemDoubleClickArgs.#ctor(System.Int32)">
            <summary>
            Arguments for item double click events
            </summary>
            <param name="itemIndex">The clicked item index</param>
        </member>
        <member name="P:MLV.ManagedListViewItemDoubleClickArgs.ClickedItemIndex">
            <summary>
            Get the clicked item index
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemDrawArgs">
            <summary>
            Arguments for item draw vents
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemDrawArgs.#ctor(System.Int32)">
            <summary>
            Arguments for item draw vents
            </summary>
            <param name="itemIndex">The target item index</param>
        </member>
        <member name="P:MLV.ManagedListViewItemDrawArgs.TextToDraw">
            <summary>
            Get or set the text to draw 
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItemDrawArgs.ImageToDraw">
            <summary>
            Get or set the image to draw
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItemDrawArgs.ItemIndex">
            <summary>
            Get the target item index
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemDrawMode">
            <summary>
            The item draw mode.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewItemDrawMode.Text">
            <summary>
            Draw text only. The text will be taken from Text property of item or subitem.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewItemDrawMode.Image">
            <summary>
            Draw image only. The image will be used from ImagesList at given index of ImageIndex property of item or subitem.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewItemDrawMode.TextAndImage">
            <summary>
            Draw both text and image. The text will be taken from Text property of item or subitem, 
            The image will be used from ImagesList at given index of ImageIndex property of item or subitem.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewItemDrawMode.UserDraw">
            <summary>
            Use user resources to draw both text and image. You must use the draw events to draw once this mode chosen.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItemSelectArgs">
            <summary>
            Arguments for item select events.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemSelectArgs.#ctor(System.Int32)">
            <summary>
            Arguments for item select events.
            </summary>
            <param name="itemIndex">The target item index</param>
        </member>
        <member name="P:MLV.ManagedListViewItemSelectArgs.ItemIndex">
            <summary>
            The item index.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewMouseOverSubItemArgs">
            <summary>
            Arguments for mouse over subitem events.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewMouseOverSubItemArgs.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Arguments for mouse over subitem events.
            </summary>
            <param name="itemIndex">The target item index.</param>
            <param name="columnID">The column id which the subitem belong to.</param>
            <param name="mouseX">The mouse x coordinate value in the panel (not the view port).</param>
        </member>
        <member name="P:MLV.ManagedListViewMouseOverSubItemArgs.ColumnID">
            <summary>
            Get the column id which the subitem belong to.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewMouseOverSubItemArgs.ItemIndex">
            <summary>
            Get the parent item index.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewMouseOverSubItemArgs.MouseX">
            <summary>
            The mouse x coordinate value in the panel (not the view port).
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewRatingChangedArgs">
            <summary>
            Arguments for rating events.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewRatingChangedArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Arguments for rating events.
            </summary>
            <param name="id">The column id which the subitem belongs to.</param>
            <param name="itemIndex">The parent item index</param>
            <param name="rating">The rating value (0-5)</param>
        </member>
        <member name="P:MLV.ManagedListViewRatingChangedArgs.ColumnID">
            <summary>
            Get the column id which the subitem belongs to.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingChangedArgs.ItemIndex">
            <summary>
            Get The parent item index
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingChangedArgs.Rating">
            <summary>
            Get the rating value (0-5; 0=none rating, 5=top rating or 5 stars)
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewSortMode">
            <summary>
            The sort mode.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewSortMode.AtoZ">
            <summary>
            Sort items A to Z.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewSortMode.ZtoA">
            <summary>
            Sort items Z to A.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewSortMode.None">
            <summary>
            No sort.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewSubItemDrawArgs">
            <summary>
            Arguments for subitem draw events.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewSubItemDrawArgs.#ctor(System.String,System.Int32,MLV.ManagedListViewItem)">
            <summary>
            Arguments for subitem draw events.
            </summary>
            <param name="id">The column id which this subitem belongs to.</param>
            <param name="itemIndex">The parent item index.</param>
            <param name="theItem">The item</param>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.ColumnID">
            <summary>
            Get the column id which this subitem belongs to.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.TextToDraw">
            <summary>
            Get or set the text to draw.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.ImageToDraw">
            <summary>
            Get or set the image to draw.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.ItemIndex">
            <summary>
            Get the parent item index.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewSubItemDrawArgs.ParentItem">
            <summary>
            The parent item
            </summary>
        </member>
        <member name="T:MLV.MLVColumnsEditor">
            <summary>
            The columns editor
            </summary>
        </member>
        <member name="M:MLV.MLVColumnsEditor.#ctor(System.Type)">
            <summary>
            The columns collection editor
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:MLV.MLVColumnsEditor.GetDisplayText(System.Object)">
            <summary>
            Get display text
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MLV.MLVColumnsEditor.SetItems(System.Object,System.Object[])">
            <summary>
            Set items
            </summary>
            <param name="editValue"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MLV.MLVColumnsEditor.CreateInstance(System.Type)">
            <summary>
            Create Instance
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:MLV.MLVSubItemsEditor">
            <summary>
            Sub items collection editor
            </summary>
        </member>
        <member name="M:MLV.MLVSubItemsEditor.#ctor(System.Type)">
            <summary>
            Sub items collection editor
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:MLV.MLVSubItemsEditor.GetDisplayText(System.Object)">
            <summary>
            Get Display Text
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MLV.MLVSubItemsEditor.SetItems(System.Object,System.Object[])">
            <summary>
            Set Items
            </summary>
            <param name="editValue"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MLV.MLVSubItemsEditor.CreateInstance(System.Type)">
            <summary>
            Create Instance
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:MLV.ManagedListViewColumn">
            <summary>
            Advanced ListView column.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumn.Clone">
            <summary>
            Ceate an exact clone of this column
            </summary>
            <returns>An exact clone of this column</returns>
        </member>
        <member name="P:MLV.ManagedListViewColumn.HeaderText">
            <summary>
            Get or set the header text of this column.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumn.HeaderTextColor">
            <summary>
            Get or set the header text color of this column.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumn.SortMode">
            <summary>
            Get or set the sortmode for this column that will be used to sort items that connected to this column using id.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumn.ID">
            <summary>
            Get or set the id of this column. Use this to connect subitems to this column.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewColumn.Width">
            <summary>
            Get or set the width of this column.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewItem">
            <summary>
            Advanced ListView item.
            </summary>
        </member>
        <member name="T:MLV.IManagedListViewItem">
            <summary>
            The Advanced ListView item interfaced class.
            </summary>
        </member>
        <member name="M:MLV.IManagedListViewItem.OnMouseOver(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Rises the mouse over event.
            </summary>
            <param name="mouseLocation">The mouse location within the viewport of the parent listview control.</param>
            <param name="charFontSize">The char font size</param>
        </member>
        <member name="M:MLV.IManagedListViewItem.OnMouseClick(System.Drawing.Point,System.Drawing.Size,System.Int32)">
            <summary>
            Rises the mouse click event
            </summary>
            <param name="mouseLocation">The mouse location within the viewport of the parent listview control.</param>
            <param name="charFontSize">The char font size</param>
            <param name="itemIndex">The item index or the part item index if this item is a subitem.</param>
        </member>
        <member name="M:MLV.IManagedListViewItem.OnMouseLeave">
            <summary>
            Rises the mouse leave event
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.Text">
            <summary>
            Get or set the item text.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.Color">
            <summary>
            Get or set this item text's color.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.ImageIndex">
            <summary>
            Get or set the image index for this item within the ImagesList collection of the parent control.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.DrawMode">
            <summary>
            Get or set the draw mode for this item.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.CustomFontEnabled">
            <summary>
            Get or set if the custom font enabled for this item. Normally the control draw item texts debending on font value 
            of that control, but if this value enabled the control will use the font that specified in CustomFont property 
            of thos item.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.CustomFont">
            <summary>
            Get or set the custom font which will be used to draw text if this item when the CustomFontEnabled property is true.
            </summary>
        </member>
        <member name="P:MLV.IManagedListViewItem.Tag">
            <summary>
            Get or set the tag for this item.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItem.GetSubItemByID(System.String)">
            <summary>
            Get subitem using column id
            </summary>
            <param name="id">The column id</param>
            <returns>The arget subitem if found otherwise null.</returns>
        </member>
        <member name="M:MLV.ManagedListViewItem.OnMouseLeave">
            <summary>
            Rises the "on mouse leave" event.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItem.Clone">
            <summary>
            Creat an exact clone of this item
            </summary>
            <returns>An exact clone of this item</returns>
        </member>
        <member name="P:MLV.ManagedListViewItem.SubItems">
            <summary>
            Get or set the subitems collection.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItem.Selected">
            <summary>
            Get or set a value indecate whether this item is selected.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewItem.IsSpecialItem">
            <summary>
            Get or set a value indecate whether this item is special. Special items always colered with special color.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewRatingSubItem">
            <summary>
            Advanced ListView rating subitem. This is special subitem can be treated like normal subitem (added to item normaly) but 
            this subitem will be drawn differently. The parent advanced listview control will draw it as 5 stars debending on Rating 
            value, also the control will allow user to change rating using mouse. No text or image will be drawn and no draw event 
            will Raise.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewSubItem">
            <summary>
            The Advanced ListView Subitem that can be used in Advanced ListView items.
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewSubItem.Clone">
            <summary>
            Get an exact clone of this sub item
            </summary>
            <returns>An exact clone of this sub item</returns>
        </member>
        <member name="P:MLV.ManagedListViewSubItem.ColumnID">
            <summary>
            Get or set the column id that this subitem belongs to. This value is important and this subitem will 
            NOT GET DROWN until this value is set correctly. Use the same value of ManagedListViewColumn.ID
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewRatingSubItem.OnMouseClick(System.Drawing.Point,System.Drawing.Size,System.Int32)">
            <summary>
            Rises the mouse click event
            </summary>
            <param name="mouseLocation">The mouse location within the viewport.</param>
            <param name="charFontSize">The default char size debending on parent listview control font.</param>
            <param name="itemIndex">The parent item index.</param>
        </member>
        <member name="M:MLV.ManagedListViewRatingSubItem.OnMouseOver(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Rises the mouse over event
            </summary>
            <param name="mouseLocation">The mouse location within the viewport.</param>
            <param name="charFontSize">The default char size debending on parent listview control font.</param>
        </member>
        <member name="M:MLV.ManagedListViewRatingSubItem.OnRefreshRating(System.Int32,System.Int32)">
            <summary>
            Rises the UpdateRatingRequest event.
            </summary>
            <param name="itemIndex">The parent item index</param>
            <param name="itemHeight">The item height value. Should be calculated in the parent control automaticly debending on draw status.</param>
        </member>
        <member name="E:MLV.ManagedListViewRatingSubItem.RatingChanged">
            <summary>
            Raised when the user changes the rating via clicking on this subitem.
            </summary>
        </member>
        <member name="E:MLV.ManagedListViewRatingSubItem.UpdateRatingRequest">
            <summary>
            Raised when this sub item need to refresh rating (to get the original value of rating)
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingSubItem.Rating">
            <summary>
            Get or set the rating value. (0-5, 0=none rating, 5=top rating or 5 stars)
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingSubItem.OverRating">
            <summary>
            Get or set the overrating value (0-5, 0=none rating, 5=top rating or 5 stars). This value changed debending on the mouse 
            cursor overing the subitem and has no effect on original rating value.
            </summary>
        </member>
        <member name="P:MLV.ManagedListViewRatingSubItem.DrawOverImage">
            <summary>
            Get or set if should draw the overrating image. The overimage draw when the overrating value changed debending on the mouse 
            cursor overing the subitem and has no effect on original rating value.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewViewMode">
            <summary>
            The listview mode.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewViewMode.Details">
            <summary>
            Draw items in details mode. This will draw columns and subitems.
            </summary>
        </member>
        <member name="F:MLV.ManagedListViewViewMode.Thumbnails">
            <summary>
            Draw items in thumbnails mode. This will draw items only.
            </summary>
        </member>
        <member name="T:MLV.ManagedListViewColumnsCollection">
            <summary>
            ManagedListView Columns Collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.#ctor">
            <summary>
            ManagedListView Columns Collection. (This constructor will declare the parent control as null so no event raise)
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.#ctor(System.Collections.Generic.IEnumerable{MLV.ManagedListViewColumn})">
            <summary>
            ManagedListView Columns Collection. (This constructor will declare the parent control as null so no event raise)
            </summary>
            <param name="newColumns">The new columns to be added to the collection</param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.#ctor(MLV.ManagedListView)">
            <summary>
            ManagedListView Columns Collection.
            </summary>
            <param name="owner">The parent <see cref="T:MLV.ManagedListView"/> control</param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.#ctor(MLV.ManagedListView,System.Collections.Generic.IEnumerable{MLV.ManagedListViewColumn})">
            <summary>
            ManagedListView Columns Collection.
            </summary>
            <param name="owner">The parent <see cref="T:MLV.ManagedListView"/> control</param>
            <param name="newColumns">The new columns to be added to the collection</param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Add(MLV.ManagedListViewColumn)">
            <summary>
            Add column to this collection
            </summary>
            <param name="item"><see cref="T:MLV.ManagedListViewColumn"/></param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Insert(System.Int32,MLV.ManagedListViewColumn)">
            <summary>
            Insert column to this collection
            </summary>
            <param name="index">The index to insert at</param>
            <param name="item"><see cref="T:MLV.ManagedListViewColumn"/></param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Clear">
            <summary>
            Clear this collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Remove(MLV.ManagedListViewColumn)">
            <summary>
            Remove a column from this collection
            </summary>
            <param name="item">The <see cref="T:MLV.ManagedListViewColumn"/> to remove</param>
            <returns>True if column removed successfully otherwise false.</returns>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove column at given index
            </summary>
            <param name="index">The index of the column to remove</param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.GetColumnByID(System.String)">
            <summary>
            Get column using given id
            </summary>
            <param name="id">The target column id</param>
            <returns>The column if found otherwise null.</returns>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Sort">
            <summary>
            Sort the columns collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Sort(System.Collections.Generic.IComparer{MLV.ManagedListViewColumn})">
            <summary>
            Sort the columns collection using comparer
            </summary>
            <param name="comparer">The comparer to use in compare operation</param>
        </member>
        <member name="M:MLV.ManagedListViewColumnsCollection.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{MLV.ManagedListViewColumn})">
            <summary>
            Sort the columns collection using comparer
            </summary>
            <param name="index">The start index to start with</param>
            <param name="count">The count of columns</param>
            <param name="comparer">The comparer to use in compare operation</param>
        </member>
        <member name="T:MLV.ManagedListViewItemsCollection">
            <summary>
            Managed ListView Items Collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.#ctor">
            <summary>
            Managed ListView Items Collection. (This constructor will declare the parent control as null so no event raise)
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.#ctor(System.Collections.Generic.IEnumerable{MLV.ManagedListViewItem})">
            <summary>
            Managed ListView Items Collection. (This constructor will declare the parent control as null so no event raise)
            </summary>
            <param name="newItems">The new items that will be added to the collection</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.#ctor(MLV.ManagedListView)">
            <summary>
            Managed ListView Items Collection
            </summary>
            <param name="owner">The parent <see cref="T:MLV.ManagedListView"/> control</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.#ctor(MLV.ManagedListView,System.Collections.Generic.IEnumerable{MLV.ManagedListViewItem})">
            <summary>
            Managed ListView Items Collection
            </summary>
            <param name="owner">The parent <see cref="T:MLV.ManagedListView"/> control</param>
            <param name="newItems">The new items that will be added to the collection</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Add(MLV.ManagedListViewItem)">
            <summary>
            Add item to the collection
            </summary>
            <param name="item"><see cref="T:MLV.ManagedListViewItem"/></param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Clear">
            <summary>
            Clear this collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Remove(MLV.ManagedListViewItem)">
            <summary>
            Remove an item from this collection
            </summary>
            <param name="item"><see cref="T:MLV.ManagedListViewItem"/> to remove</param>
            <returns>True if removed successfuly otherwise false.</returns>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item at index
            </summary>
            <param name="index">The index to remove item at</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Insert(System.Int32,MLV.ManagedListViewItem)">
            <summary>
            Insert item to this collection at given index
            </summary>
            <param name="index">The index to insert the item at</param>
            <param name="item">The item to insert</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Sort">
            <summary>
            Sort the items collection
            </summary>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Sort(System.Collections.Generic.IComparer{MLV.ManagedListViewItem})">
            <summary>
            Sort the items collection using comparer
            </summary>
            <param name="comparer">The comparer to use in compare operation</param>
        </member>
        <member name="M:MLV.ManagedListViewItemsCollection.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{MLV.ManagedListViewItem})">
            <summary>
            Sort the items collection using comparer
            </summary>
            <param name="index">The start index to start with</param>
            <param name="count">The count of items</param>
            <param name="comparer">The comparer to use in compare operation</param>
        </member>
        <member name="T:MLV.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.noneRating">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.SortAlpha">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.SortZ">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:MLV.Properties.Resources.star_5">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
